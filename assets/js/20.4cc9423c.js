(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{379:function(t,e,s){"use strict";s.r(e);var n=s(42),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("em",[t._v("httpHost")]),t._v(" config sets the fallback http host used by")]),t._v(" "),s("ul",[s("li",[t._v("mail merge token substitution")]),t._v(" "),s("li",[t._v("interal HTTP requests spawned by "),s("em",[t._v("NotifyBC")])])]),t._v(" "),s("p",[s("em",[t._v("httpHost")]),t._v(" can be overridden by other configs or data. For example")]),t._v(" "),s("ul",[s("li",[s("em",[t._v("internalHttpHost")]),t._v(" config")]),t._v(" "),s("li",[s("em",[t._v("httpHost")]),t._v(" field in a notification")])]),t._v(" "),s("p",[t._v("There are contexts where there is no alternatives to "),s("em",[t._v("httpHost")]),t._v(". Therefore this config should be defined.")]),t._v(" "),s("p",[t._v("Define the config, which has no default value, in "),s("em",[t._v("/server/config.local.js")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"httpHost"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://foo.com"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);